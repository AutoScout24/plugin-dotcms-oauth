apply plugin: 'osgi'
apply plugin: 'eclipse'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'maven-publish'

sourceCompatibility = '1.8'
group = "com.autoscout24"
version = '0.' + (System.getenv("GO_PIPELINE_LABEL")  ?: '1')

repositories {
	maven {
        url "http://repo.dotcms.com/artifactory/libs-release"
    }
}

dependencies {
    compile (group: 'com.dotcms', name: 'dotcms', version: '4.2.2'){
        transitive = true
    }
	provided('javax.servlet:servlet-api:2.5')
}

buildscript {
	repositories {
		maven { url 'http://repo.spring.io/plugins-release' }
	}
	dependencies {
		classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
	}
}

jar {
    manifest {
        name = 'OAuth Single Signon'
        symbolicName = 'com.dotcms.osgi.oauth'
        instruction '-includeresource', 'libs'
        instruction 'Bundle-Vendor', 'dotcms'
        instruction 'Bundle-Description', 'OAuth SSO with Auth0'
        instruction 'Bundle-DocURL', 'http://dotcms.com'
        instruction 'Bundle-Activator', 'com.autoscout24.dotcms.authentication.Activator'
        instruction 'DynamicImport-Package', '*'
        instruction 'Import-Package', 'org.scribe.builder.api.*;version=0,org.scribe.builder.*;version=0,com.autoscout24.dotcms.authentication.builder.api.*;version=0,com.autoscout24.dotcms.authentication.builder.*;version=0,!org.apache.commons.codec.binary.*,*;version=0'
    }
}

task removeVersionsOnManifest (dependsOn: ['jar']) << {
	def manifest1=new java.util.jar.Manifest(new FileInputStream('build/tmp/jar/MANIFEST.MF'))
	def imports = manifest1.getMainAttributes().find { it.key.toString()=="Import-Package" }
	imports.value=imports.value.toString().replaceAll(~/;version="[\(\[][0-9\.]+,[0-9\.]+[\)\]]"/,'')
	manifest1.write(new FileOutputStream("build/tmp/jar/MANIFEST_NOVERSIONS.MF"))
}


task osgijar(type: Jar, dependsOn: ['removeVersionsOnManifest'] ) {
    appendix = "release"
    from zipTree(jar.archivePath) // add original content 
    manifest {
    	from('build/tmp/jar/MANIFEST_NOVERSIONS.MF')
    } 
}

task release(dependsOn: ['osgijar']) << {
    def originalJar = file(jar.archivePath)
    originalJar.delete()
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

def nexusUsername = "deploy"
def nexusPassword = System.getenv("GO_NEXUS_DEPLOYMENT_PASSWORD")

publishing {
    repositories {
        maven {
            credentials {
                username nexusUsername
                password nexusPassword
            }
            url "https://nexus.tools.autoscout24.com/nexus/content/repositories/releases"
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}